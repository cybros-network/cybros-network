
//! Autogenerated weights for pallet_nfts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-04, STEPS: `50`, REPEAT: `50`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
    // target/production/node
    // benchmark
    // pallet
    // --pallet=pallet_nfts
    // --extrinsic=*
    // --chain=dev
    // --steps=50
    // --repeat=50
    // --execution=wasm
    // --wasm-execution=compiled
    // --heap-pages=4096
    // --output=./vendor/pallet_nfts/src/weights.rs
    // --template=./templates/pallet-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_nfts.
pub trait WeightInfo {
    fn create() -> Weight;
    fn force_create() -> Weight;
    fn destroy(n: u32, m: u32, a: u32, ) -> Weight;
    fn mint() -> Weight;
    fn force_mint() -> Weight;
    fn burn() -> Weight;
    fn transfer() -> Weight;
    fn redeposit(i: u32, ) -> Weight;
    fn lock_item_transfer() -> Weight;
    fn unlock_item_transfer() -> Weight;
    fn lock_collection() -> Weight;
    fn transfer_ownership() -> Weight;
    fn set_team() -> Weight;
    fn force_collection_owner() -> Weight;
    fn force_collection_config() -> Weight;
    fn lock_item_properties() -> Weight;
    fn set_attribute() -> Weight;
    fn force_set_attribute() -> Weight;
    fn clear_attribute() -> Weight;
    fn approve_item_attributes() -> Weight;
    fn cancel_item_attributes_approval(n: u32, ) -> Weight;
    fn set_metadata() -> Weight;
    fn clear_metadata() -> Weight;
    fn set_collection_metadata() -> Weight;
    fn clear_collection_metadata() -> Weight;
    fn approve_transfer() -> Weight;
    fn cancel_approval() -> Weight;
    fn clear_all_transfer_approvals() -> Weight;
    fn set_accept_ownership() -> Weight;
    fn set_collection_max_supply() -> Weight;
    fn update_mint_settings() -> Weight;
    fn set_price() -> Weight;
    fn buy_item() -> Weight;
    fn pay_tips(n: u32, ) -> Weight;
    fn create_swap() -> Weight;
    fn cancel_swap() -> Weight;
    fn claim_swap() -> Weight;
    fn mint_pre_signed(n: u32, ) -> Weight;
    fn set_attributes_pre_signed(n: u32, ) -> Weight;
}

/// Weights for pallet_nfts using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
        impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
            /// Storage: Nfts NextCollectionId (r:1 w:1)
            /// Proof: Nfts NextCollectionId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:0 w:1)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:1)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `141`
        //  Estimated: `5034`
        // Minimum execution time: 22_000 nanoseconds.
        Weight::from_ref_time(24_000_000)
        .saturating_add(Weight::from_proof_size(5034))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
        }
            /// Storage: Nfts NextCollectionId (r:1 w:1)
            /// Proof: Nfts NextCollectionId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:0 w:1)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:1)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn force_create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6`
        //  Estimated: `5034`
        // Minimum execution time: 15_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(5034))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1001 w:1000)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1001 w:1000)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:1)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1001 w:1000)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1000 w:1000)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionMetadataOf (r:0 w:1)
            /// Proof: Nfts CollectionMetadataOf (max_values: None, max_size: Some(87), added: 2562, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1000)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:1)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 1000]`.
            /// The range of component `m` is `[0, 1000]`.
            /// The range of component `a` is `[0, 1000]`.
        fn destroy(_n: u32, m: u32, a: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `172636 + m * (127 ±0) + a * (402 ±0)`
        //  Estimated: `5878911 + a * (2921 ±0) + m * (2615 ±0)`
        // Minimum execution time: 17_075_000 nanoseconds.
        Weight::from_ref_time(13_793_808_999)
        .saturating_add(Weight::from_proof_size(5878911))
            // Standard Error: 14_252
            .saturating_add(Weight::from_ref_time(3_446_846).saturating_mul(m.into()))
            // Standard Error: 14_252
            .saturating_add(Weight::from_ref_time(4_705_551).saturating_mul(a.into()))
            .saturating_add(T::DbWeight::get().reads(2005_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(m.into())))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
            .saturating_add(T::DbWeight::get().writes(3005_u64))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(m.into())))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(a.into()))
            .saturating_add(Weight::from_proof_size(2615).saturating_mul(m.into()))
        }
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn mint() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `411`
        //  Estimated: `18456`
        // Minimum execution time: 32_000 nanoseconds.
        Weight::from_ref_time(32_000_000)
        .saturating_add(Weight::from_proof_size(18456))
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn force_mint() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `411`
        //  Estimated: `18456`
        // Minimum execution time: 30_000 nanoseconds.
        Weight::from_ref_time(31_000_000)
        .saturating_add(Weight::from_proof_size(18456))
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
        }
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1 w:0)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:0 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn burn() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `610`
        //  Estimated: `18523`
        // Minimum execution time: 34_000 nanoseconds.
        Weight::from_ref_time(35_000_000)
        .saturating_add(Weight::from_proof_size(18523))
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(7_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:2)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `774`
        //  Estimated: `22049`
        // Minimum execution time: 38_000 nanoseconds.
        Weight::from_ref_time(38_000_000)
        .saturating_add(Weight::from_proof_size(22049))
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(6_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:5000 w:5000)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// The range of component `i` is `[0, 5000]`.
        fn redeposit(i: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `719 + i * (140 ±0)`
        //  Estimated: `8073 + i * (3336 ±0)`
        // Minimum execution time: 11_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(8073))
            // Standard Error: 5_765
            .saturating_add(Weight::from_ref_time(11_730_728).saturating_mul(i.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(i.into())))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(i.into())))
            .saturating_add(Weight::from_proof_size(3336).saturating_mul(i.into()))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn lock_item_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `364`
        //  Estimated: `7047`
        // Minimum execution time: 13_000 nanoseconds.
        Weight::from_ref_time(14_000_000)
        .saturating_add(Weight::from_proof_size(7047))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn unlock_item_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `364`
        //  Estimated: `7047`
        // Minimum execution time: 13_000 nanoseconds.
        Weight::from_ref_time(14_000_000)
        .saturating_add(Weight::from_proof_size(7047))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
        fn lock_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `252`
        //  Estimated: `7072`
        // Minimum execution time: 11_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(7072))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts OwnershipAcceptance (r:1 w:1)
            /// Proof: Nfts OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:2)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn transfer_ownership() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `344`
        //  Estimated: `7062`
        // Minimum execution time: 15_000 nanoseconds.
        Weight::from_ref_time(16_000_000)
        .saturating_add(Weight::from_proof_size(7062))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:4)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn set_team() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `325`
        //  Estimated: `7079`
        // Minimum execution time: 16_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(7079))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:2)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn force_collection_owner() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `267`
        //  Estimated: `3545`
        // Minimum execution time: 10_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(3545))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
        fn force_collection_config() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `205`
        //  Estimated: `3545`
        // Minimum execution time: 8_000 nanoseconds.
        Weight::from_ref_time(9_000_000)
        .saturating_add(Weight::from_proof_size(3545))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn lock_item_properties() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `408`
        //  Estimated: `7058`
        // Minimum execution time: 12_000 nanoseconds.
        Weight::from_ref_time(12_000_000)
        .saturating_add(Weight::from_proof_size(7058))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1 w:1)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
        fn set_attribute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `14507`
        // Minimum execution time: 29_000 nanoseconds.
        Weight::from_ref_time(30_000_000)
        .saturating_add(Weight::from_proof_size(14507))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1 w:1)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
        fn force_set_attribute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `300`
        //  Estimated: `7456`
        // Minimum execution time: 17_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(7456))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Attribute (r:1 w:1)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn clear_attribute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `879`
        //  Estimated: `10969`
        // Minimum execution time: 26_000 nanoseconds.
        Weight::from_ref_time(27_000_000)
        .saturating_add(Weight::from_proof_size(10969))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
        fn approve_item_attributes() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `342`
        //  Estimated: `8472`
        // Minimum execution time: 11_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(8472))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1001 w:1000)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 1000]`.
        fn cancel_item_attributes_approval(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `791 + n * (396 ±0)`
        //  Estimated: `15976 + n * (2921 ±0)`
        // Minimum execution time: 17_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(15976))
            // Standard Error: 2_095
            .saturating_add(Weight::from_ref_time(4_536_192).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(2_u64))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(n.into()))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1 w:1)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
        fn set_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `14201`
        // Minimum execution time: 24_000 nanoseconds.
        Weight::from_ref_time(25_000_000)
        .saturating_add(Weight::from_proof_size(14201))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts ItemMetadataOf (r:1 w:1)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `572`
        //  Estimated: `10663`
        // Minimum execution time: 23_000 nanoseconds.
        Weight::from_ref_time(23_000_000)
        .saturating_add(Weight::from_proof_size(10663))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionMetadataOf (r:1 w:1)
            /// Proof: Nfts CollectionMetadataOf (max_values: None, max_size: Some(87), added: 2562, mode: MaxEncodedLen)
        fn set_collection_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `296`
        //  Estimated: `10635`
        // Minimum execution time: 21_000 nanoseconds.
        Weight::from_ref_time(21_000_000)
        .saturating_add(Weight::from_proof_size(10635))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionMetadataOf (r:1 w:1)
            /// Proof: Nfts CollectionMetadataOf (max_values: None, max_size: Some(87), added: 2562, mode: MaxEncodedLen)
        fn clear_collection_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `439`
        //  Estimated: `10635`
        // Minimum execution time: 19_000 nanoseconds.
        Weight::from_ref_time(20_000_000)
        .saturating_add(Weight::from_proof_size(10635))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn approve_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `429`
        //  Estimated: `11398`
        // Minimum execution time: 16_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(11398))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `7860`
        // Minimum execution time: 15_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(7860))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn clear_all_transfer_approvals() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `7860`
        // Minimum execution time: 14_000 nanoseconds.
        Weight::from_ref_time(14_000_000)
        .saturating_add(Weight::from_proof_size(7860))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts OwnershipAcceptance (r:1 w:1)
            /// Proof: Nfts OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
        fn set_accept_ownership() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6`
        //  Estimated: `3517`
        // Minimum execution time: 9_000 nanoseconds.
        Weight::from_ref_time(9_000_000)
        .saturating_add(Weight::from_proof_size(3517))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts CollectionConfigOf (r:1 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
        fn set_collection_max_supply() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `296`
        //  Estimated: `7083`
        // Minimum execution time: 12_000 nanoseconds.
        Weight::from_ref_time(12_000_000)
        .saturating_add(Weight::from_proof_size(7083))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
        fn update_mint_settings() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `296`
        //  Estimated: `7083`
        // Minimum execution time: 12_000 nanoseconds.
        Weight::from_ref_time(12_000_000)
        .saturating_add(Weight::from_proof_size(7083))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn set_price() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `479`
        //  Estimated: `11377`
        // Minimum execution time: 16_000 nanoseconds.
        Weight::from_ref_time(16_000_000)
        .saturating_add(Weight::from_proof_size(11377))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:1 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:2)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn buy_item() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `860`
        //  Estimated: `22069`
        // Minimum execution time: 42_000 nanoseconds.
        Weight::from_ref_time(43_000_000)
        .saturating_add(Weight::from_proof_size(22069))
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(6_u64))
        }
            /// The range of component `n` is `[0, 10]`.
        fn pay_tips(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_000 nanoseconds.
        Weight::from_ref_time(1_859_816)
        .saturating_add(Weight::from_proof_size(0))
            // Standard Error: 2_516
            .saturating_add(Weight::from_ref_time(3_030_834).saturating_mul(n.into()))
        }
            /// Storage: Nfts Item (r:2 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn create_swap() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `487`
        //  Estimated: `7662`
        // Minimum execution time: 14_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(7662))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts PendingSwapOf (r:1 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
        fn cancel_swap() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `474`
        //  Estimated: `7862`
        // Minimum execution time: 14_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(7862))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:2 w:2)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:1 w:2)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:2 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:4)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:2)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn claim_swap() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `989`
        //  Estimated: `27910`
        // Minimum execution time: 63_000 nanoseconds.
        Weight::from_ref_time(64_000_000)
        .saturating_add(Weight::from_proof_size(27910))
            .saturating_add(T::DbWeight::get().reads(8_u64))
            .saturating_add(T::DbWeight::get().writes(11_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:10 w:10)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1 w:1)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 10]`.
        fn mint_pre_signed(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `488`
        //  Estimated: `23110 + n * (2921 ±0)`
        // Minimum execution time: 86_000 nanoseconds.
        Weight::from_ref_time(89_195_480)
        .saturating_add(Weight::from_proof_size(23110))
            // Standard Error: 9_398
            .saturating_add(Weight::from_ref_time(21_930_599).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(6_u64))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(n.into()))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:10 w:10)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 10]`.
        fn set_attributes_pre_signed(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `608`
        //  Estimated: `20138 + n * (2921 ±0)`
        // Minimum execution time: 56_000 nanoseconds.
        Weight::from_ref_time(61_480_787)
        .saturating_add(Weight::from_proof_size(20138))
            // Standard Error: 17_695
            .saturating_add(Weight::from_ref_time(22_577_283).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(2_u64))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(n.into()))
        }
    }

    // For backwards compatibility and tests
    impl WeightInfo for () {
            /// Storage: Nfts NextCollectionId (r:1 w:1)
            /// Proof: Nfts NextCollectionId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:0 w:1)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:1)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `141`
        //  Estimated: `5034`
        // Minimum execution time: 22_000 nanoseconds.
        Weight::from_ref_time(24_000_000)
        .saturating_add(Weight::from_proof_size(5034))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(5_u64))
        }
            /// Storage: Nfts NextCollectionId (r:1 w:1)
            /// Proof: Nfts NextCollectionId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:0 w:1)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:1)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn force_create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6`
        //  Estimated: `5034`
        // Minimum execution time: 15_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(5034))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(5_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1001 w:1000)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1001 w:1000)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:1)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1001 w:1000)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1000 w:1000)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionMetadataOf (r:0 w:1)
            /// Proof: Nfts CollectionMetadataOf (max_values: None, max_size: Some(87), added: 2562, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1000)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:1)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 1000]`.
            /// The range of component `m` is `[0, 1000]`.
            /// The range of component `a` is `[0, 1000]`.
        fn destroy(_n: u32, m: u32, a: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `172636 + m * (127 ±0) + a * (402 ±0)`
        //  Estimated: `5878911 + a * (2921 ±0) + m * (2615 ±0)`
        // Minimum execution time: 17_075_000 nanoseconds.
        Weight::from_ref_time(13_793_808_999)
        .saturating_add(Weight::from_proof_size(5878911))
            // Standard Error: 14_252
            .saturating_add(Weight::from_ref_time(3_446_846).saturating_mul(m.into()))
            // Standard Error: 14_252
            .saturating_add(Weight::from_ref_time(4_705_551).saturating_mul(a.into()))
            .saturating_add(RocksDbWeight::get().reads(2005_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(m.into())))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(a.into())))
            .saturating_add(RocksDbWeight::get().writes(3005_u64))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(m.into())))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(a.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(a.into()))
            .saturating_add(Weight::from_proof_size(2615).saturating_mul(m.into()))
        }
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn mint() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `411`
        //  Estimated: `18456`
        // Minimum execution time: 32_000 nanoseconds.
        Weight::from_ref_time(32_000_000)
        .saturating_add(Weight::from_proof_size(18456))
            .saturating_add(RocksDbWeight::get().reads(5_u64))
            .saturating_add(RocksDbWeight::get().writes(4_u64))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
        fn force_mint() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `411`
        //  Estimated: `18456`
        // Minimum execution time: 30_000 nanoseconds.
        Weight::from_ref_time(31_000_000)
        .saturating_add(Weight::from_proof_size(18456))
            .saturating_add(RocksDbWeight::get().reads(5_u64))
            .saturating_add(RocksDbWeight::get().writes(4_u64))
        }
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1 w:0)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:0 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn burn() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `610`
        //  Estimated: `18523`
        // Minimum execution time: 34_000 nanoseconds.
        Weight::from_ref_time(35_000_000)
        .saturating_add(Weight::from_proof_size(18523))
            .saturating_add(RocksDbWeight::get().reads(5_u64))
            .saturating_add(RocksDbWeight::get().writes(7_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:2)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `774`
        //  Estimated: `22049`
        // Minimum execution time: 38_000 nanoseconds.
        Weight::from_ref_time(38_000_000)
        .saturating_add(Weight::from_proof_size(22049))
            .saturating_add(RocksDbWeight::get().reads(6_u64))
            .saturating_add(RocksDbWeight::get().writes(6_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:5000 w:5000)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// The range of component `i` is `[0, 5000]`.
        fn redeposit(i: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `719 + i * (140 ±0)`
        //  Estimated: `8073 + i * (3336 ±0)`
        // Minimum execution time: 11_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(8073))
            // Standard Error: 5_765
            .saturating_add(Weight::from_ref_time(11_730_728).saturating_mul(i.into()))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(i.into())))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(i.into())))
            .saturating_add(Weight::from_proof_size(3336).saturating_mul(i.into()))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn lock_item_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `364`
        //  Estimated: `7047`
        // Minimum execution time: 13_000 nanoseconds.
        Weight::from_ref_time(14_000_000)
        .saturating_add(Weight::from_proof_size(7047))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn unlock_item_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `364`
        //  Estimated: `7047`
        // Minimum execution time: 13_000 nanoseconds.
        Weight::from_ref_time(14_000_000)
        .saturating_add(Weight::from_proof_size(7047))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
        fn lock_collection() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `252`
        //  Estimated: `7072`
        // Minimum execution time: 11_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(7072))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts OwnershipAcceptance (r:1 w:1)
            /// Proof: Nfts OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:2)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn transfer_ownership() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `344`
        //  Estimated: `7062`
        // Minimum execution time: 15_000 nanoseconds.
        Weight::from_ref_time(16_000_000)
        .saturating_add(Weight::from_proof_size(7062))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(4_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:4)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn set_team() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `325`
        //  Estimated: `7079`
        // Minimum execution time: 16_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(7079))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(5_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionAccount (r:0 w:2)
            /// Proof: Nfts CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
        fn force_collection_owner() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `267`
        //  Estimated: `3545`
        // Minimum execution time: 10_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(3545))
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:0 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
        fn force_collection_config() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `205`
        //  Estimated: `3545`
        // Minimum execution time: 8_000 nanoseconds.
        Weight::from_ref_time(9_000_000)
        .saturating_add(Weight::from_proof_size(3545))
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn lock_item_properties() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `408`
        //  Estimated: `7058`
        // Minimum execution time: 12_000 nanoseconds.
        Weight::from_ref_time(12_000_000)
        .saturating_add(Weight::from_proof_size(7058))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1 w:1)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
        fn set_attribute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `14507`
        // Minimum execution time: 29_000 nanoseconds.
        Weight::from_ref_time(30_000_000)
        .saturating_add(Weight::from_proof_size(14507))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1 w:1)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
        fn force_set_attribute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `300`
        //  Estimated: `7456`
        // Minimum execution time: 17_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(7456))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Attribute (r:1 w:1)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn clear_attribute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `879`
        //  Estimated: `10969`
        // Minimum execution time: 26_000 nanoseconds.
        Weight::from_ref_time(27_000_000)
        .saturating_add(Weight::from_proof_size(10969))
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
        fn approve_item_attributes() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `342`
        //  Estimated: `8472`
        // Minimum execution time: 11_000 nanoseconds.
        Weight::from_ref_time(11_000_000)
        .saturating_add(Weight::from_proof_size(8472))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:1001 w:1000)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 1000]`.
        fn cancel_item_attributes_approval(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `791 + n * (396 ±0)`
        //  Estimated: `15976 + n * (2921 ±0)`
        // Minimum execution time: 17_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(15976))
            // Standard Error: 2_095
            .saturating_add(Weight::from_ref_time(4_536_192).saturating_mul(n.into()))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(n.into())))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(n.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(n.into()))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1 w:1)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
        fn set_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `14201`
        // Minimum execution time: 24_000 nanoseconds.
        Weight::from_ref_time(25_000_000)
        .saturating_add(Weight::from_proof_size(14201))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts ItemMetadataOf (r:1 w:1)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
        fn clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `572`
        //  Estimated: `10663`
        // Minimum execution time: 23_000 nanoseconds.
        Weight::from_ref_time(23_000_000)
        .saturating_add(Weight::from_proof_size(10663))
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionMetadataOf (r:1 w:1)
            /// Proof: Nfts CollectionMetadataOf (max_values: None, max_size: Some(87), added: 2562, mode: MaxEncodedLen)
        fn set_collection_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `296`
        //  Estimated: `10635`
        // Minimum execution time: 21_000 nanoseconds.
        Weight::from_ref_time(21_000_000)
        .saturating_add(Weight::from_proof_size(10635))
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionMetadataOf (r:1 w:1)
            /// Proof: Nfts CollectionMetadataOf (max_values: None, max_size: Some(87), added: 2562, mode: MaxEncodedLen)
        fn clear_collection_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `439`
        //  Estimated: `10635`
        // Minimum execution time: 19_000 nanoseconds.
        Weight::from_ref_time(20_000_000)
        .saturating_add(Weight::from_proof_size(10635))
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn approve_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `429`
        //  Estimated: `11398`
        // Minimum execution time: 16_000 nanoseconds.
        Weight::from_ref_time(17_000_000)
        .saturating_add(Weight::from_proof_size(11398))
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `7860`
        // Minimum execution time: 15_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(7860))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionRoleOf (r:1 w:0)
            /// Proof: Nfts CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
        fn clear_all_transfer_approvals() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `437`
        //  Estimated: `7860`
        // Minimum execution time: 14_000 nanoseconds.
        Weight::from_ref_time(14_000_000)
        .saturating_add(Weight::from_proof_size(7860))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts OwnershipAcceptance (r:1 w:1)
            /// Proof: Nfts OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
        fn set_accept_ownership() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6`
        //  Estimated: `3517`
        // Minimum execution time: 9_000 nanoseconds.
        Weight::from_ref_time(9_000_000)
        .saturating_add(Weight::from_proof_size(3517))
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts CollectionConfigOf (r:1 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
        fn set_collection_max_supply() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `296`
        //  Estimated: `7083`
        // Minimum execution time: 12_000 nanoseconds.
        Weight::from_ref_time(12_000_000)
        .saturating_add(Weight::from_proof_size(7083))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:1)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
        fn update_mint_settings() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `296`
        //  Estimated: `7083`
        // Minimum execution time: 12_000 nanoseconds.
        Weight::from_ref_time(12_000_000)
        .saturating_add(Weight::from_proof_size(7083))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn set_price() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `479`
        //  Estimated: `11377`
        // Minimum execution time: 16_000 nanoseconds.
        Weight::from_ref_time(16_000_000)
        .saturating_add(Weight::from_proof_size(11377))
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:1 w:1)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:2)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn buy_item() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `860`
        //  Estimated: `22069`
        // Minimum execution time: 42_000 nanoseconds.
        Weight::from_ref_time(43_000_000)
        .saturating_add(Weight::from_proof_size(22069))
            .saturating_add(RocksDbWeight::get().reads(6_u64))
            .saturating_add(RocksDbWeight::get().writes(6_u64))
        }
            /// The range of component `n` is `[0, 10]`.
        fn pay_tips(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_000 nanoseconds.
        Weight::from_ref_time(1_859_816)
        .saturating_add(Weight::from_proof_size(0))
            // Standard Error: 2_516
            .saturating_add(Weight::from_ref_time(3_030_834).saturating_mul(n.into()))
        }
            /// Storage: Nfts Item (r:2 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:0 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
        fn create_swap() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `487`
        //  Estimated: `7662`
        // Minimum execution time: 14_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(7662))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts PendingSwapOf (r:1 w:1)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
        fn cancel_swap() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `474`
        //  Estimated: `7862`
        // Minimum execution time: 14_000 nanoseconds.
        Weight::from_ref_time(15_000_000)
        .saturating_add(Weight::from_proof_size(7862))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
        }
            /// Storage: Nfts Item (r:2 w:2)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts PendingSwapOf (r:1 w:2)
            /// Proof: Nfts PendingSwapOf (max_values: None, max_size: Some(71), added: 2546, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:0)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:2 w:0)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:4)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// Storage: Nfts ItemPriceOf (r:0 w:2)
            /// Proof: Nfts ItemPriceOf (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
        fn claim_swap() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `989`
        //  Estimated: `27910`
        // Minimum execution time: 63_000 nanoseconds.
        Weight::from_ref_time(64_000_000)
        .saturating_add(Weight::from_proof_size(27910))
            .saturating_add(RocksDbWeight::get().reads(8_u64))
            .saturating_add(RocksDbWeight::get().writes(11_u64))
        }
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Item (r:1 w:1)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemConfigOf (r:1 w:1)
            /// Proof: Nfts ItemConfigOf (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:10 w:10)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: Nfts ItemMetadataOf (r:1 w:1)
            /// Proof: Nfts ItemMetadataOf (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
            /// Storage: Nfts Account (r:0 w:1)
            /// Proof: Nfts Account (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 10]`.
        fn mint_pre_signed(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `488`
        //  Estimated: `23110 + n * (2921 ±0)`
        // Minimum execution time: 86_000 nanoseconds.
        Weight::from_ref_time(89_195_480)
        .saturating_add(Weight::from_proof_size(23110))
            // Standard Error: 9_398
            .saturating_add(Weight::from_ref_time(21_930_599).saturating_mul(n.into()))
            .saturating_add(RocksDbWeight::get().reads(6_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(n.into())))
            .saturating_add(RocksDbWeight::get().writes(6_u64))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(n.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(n.into()))
        }
            /// Storage: Nfts Item (r:1 w:0)
            /// Proof: Nfts Item (max_values: None, max_size: Some(861), added: 3336, mode: MaxEncodedLen)
            /// Storage: Nfts ItemAttributesApprovalsOf (r:1 w:1)
            /// Proof: Nfts ItemAttributesApprovalsOf (max_values: None, max_size: Some(681), added: 3156, mode: MaxEncodedLen)
            /// Storage: Nfts Collection (r:1 w:1)
            /// Proof: Nfts Collection (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
            /// Storage: Nfts CollectionConfigOf (r:1 w:0)
            /// Proof: Nfts CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
            /// Storage: Nfts Attribute (r:10 w:10)
            /// Proof: Nfts Attribute (max_values: None, max_size: Some(446), added: 2921, mode: MaxEncodedLen)
            /// Storage: System Account (r:1 w:1)
            /// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
            /// The range of component `n` is `[0, 10]`.
        fn set_attributes_pre_signed(n: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `608`
        //  Estimated: `20138 + n * (2921 ±0)`
        // Minimum execution time: 56_000 nanoseconds.
        Weight::from_ref_time(61_480_787)
        .saturating_add(Weight::from_proof_size(20138))
            // Standard Error: 17_695
            .saturating_add(Weight::from_ref_time(22_577_283).saturating_mul(n.into()))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(n.into())))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
            .saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(n.into())))
            .saturating_add(Weight::from_proof_size(2921).saturating_mul(n.into()))
        }
    }
